/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@arrow-left-name: 'arrow-left';
@arrow-left-x: 48px;
@arrow-left-y: 24px;
@arrow-left-offset-x: -48px;
@arrow-left-offset-y: -24px;
@arrow-left-width: 9px;
@arrow-left-height: 15px;
@arrow-left-total-width: 72px;
@arrow-left-total-height: 58px;
@arrow-left-image: '../../build/sprites/sprite.png';
@arrow-left: 48px 24px -48px -24px 9px 15px 72px 58px '../../build/sprites/sprite.png' 'arrow-left';
@cancel-name: 'cancel';
@cancel-x: 0px;
@cancel-y: 0px;
@cancel-offset-x: 0px;
@cancel-offset-y: 0px;
@cancel-width: 24px;
@cancel-height: 24px;
@cancel-total-width: 72px;
@cancel-total-height: 58px;
@cancel-image: '../../build/sprites/sprite.png';
@cancel: 0px 0px 0px 0px 24px 24px 72px 58px '../../build/sprites/sprite.png' 'cancel';
@hide-name: 'hide';
@hide-x: 57px;
@hide-y: 24px;
@hide-offset-x: -57px;
@hide-offset-y: -24px;
@hide-width: 10px;
@hide-height: 10px;
@hide-total-width: 72px;
@hide-total-height: 58px;
@hide-image: '../../build/sprites/sprite.png';
@hide: 57px 24px -57px -24px 10px 10px 72px 58px '../../build/sprites/sprite.png' 'hide';
@menu-name: 'menu';
@menu-x: 24px;
@menu-y: 0px;
@menu-offset-x: -24px;
@menu-offset-y: 0px;
@menu-width: 24px;
@menu-height: 24px;
@menu-total-width: 72px;
@menu-total-height: 58px;
@menu-image: '../../build/sprites/sprite.png';
@menu: 24px 0px -24px 0px 24px 24px 72px 58px '../../build/sprites/sprite.png' 'menu';
@my-account-name: 'my-account';
@my-account-x: 0px;
@my-account-y: 24px;
@my-account-offset-x: 0px;
@my-account-offset-y: -24px;
@my-account-width: 24px;
@my-account-height: 24px;
@my-account-total-width: 72px;
@my-account-total-height: 58px;
@my-account-image: '../../build/sprites/sprite.png';
@my-account: 0px 24px 0px -24px 24px 24px 72px 58px '../../build/sprites/sprite.png' 'my-account';
@open-name: 'open';
@open-x: 0px;
@open-y: 48px;
@open-offset-x: 0px;
@open-offset-y: -48px;
@open-width: 10px;
@open-height: 10px;
@open-total-width: 72px;
@open-total-height: 58px;
@open-image: '../../build/sprites/sprite.png';
@open: 0px 48px 0px -48px 10px 10px 72px 58px '../../build/sprites/sprite.png' 'open';
@search-name: 'search';
@search-x: 24px;
@search-y: 24px;
@search-offset-x: -24px;
@search-offset-y: -24px;
@search-width: 24px;
@search-height: 24px;
@search-total-width: 72px;
@search-total-height: 58px;
@search-image: '../../build/sprites/sprite.png';
@search: 24px 24px -24px -24px 24px 24px 72px 58px '../../build/sprites/sprite.png' 'search';
@shopping-name: 'shopping';
@shopping-x: 48px;
@shopping-y: 0px;
@shopping-offset-x: -48px;
@shopping-offset-y: 0px;
@shopping-width: 24px;
@shopping-height: 24px;
@shopping-total-width: 72px;
@shopping-total-height: 58px;
@shopping-image: '../../build/sprites/sprite.png';
@shopping: 48px 0px -48px 0px 24px 24px 72px 58px '../../build/sprites/sprite.png' 'shopping';
@spritesheet-width: 72px;
@spritesheet-height: 58px;
@spritesheet-image: '../../build/sprites/sprite.png';
@spritesheet-sprites: @arrow-left @cancel @hide @menu @my-account @open @search @shopping;
@spritesheet: 72px 58px '../../build/sprites/sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
